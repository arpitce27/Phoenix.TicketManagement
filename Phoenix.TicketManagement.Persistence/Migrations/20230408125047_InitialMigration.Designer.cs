// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Phoenix.TicketManagement.Persistence;

#nullable disable

namespace Phoenix.TicketManagement.Persistence.Migrations
{
    [DbContext(typeof(PhoenixTicketDbContext))]
    [Migration("20230408125047_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Phoenix.TicketManagement.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("9983a002-ed2d-4754-821a-bba7414eaf56"),
                            Name = "Concerts"
                        },
                        new
                        {
                            CategoryId = new Guid("6aa56663-47d2-4e38-a5bd-376f2e05cdb1"),
                            Name = "Musicals"
                        },
                        new
                        {
                            CategoryId = new Guid("b836b3d4-4057-41e6-a41d-ab078cb3383e"),
                            Name = "Plays"
                        },
                        new
                        {
                            CategoryId = new Guid("d076ec67-8e10-4a27-92b1-125f74834ee3"),
                            Name = "Converences"
                        });
                });

            modelBuilder.Entity("Phoenix.TicketManagement.Domain.Entities.Event", b =>
                {
                    b.Property<Guid>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Artist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("EventId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            EventId = new Guid("f2b17009-8a66-489a-a0a8-70afcf57e4dd"),
                            Artist = "John Eienstine",
                            CategoryId = new Guid("9983a002-ed2d-4754-821a-bba7414eaf56"),
                            Date = new DateTime(2023, 10, 8, 8, 50, 47, 514, DateTimeKind.Local).AddTicks(7191),
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            ImageURL = "https://www.billboard.com/wp-content/uploads/2021/08/Princess-Nokia-by-Roger-Ho-for-Lollapalooza-2021-billboard-1548-1628011374.jpg",
                            Name = "J B E Live",
                            Price = 65
                        },
                        new
                        {
                            EventId = new Guid("e2c5a011-5bf2-48d8-9865-60f78439eee2"),
                            Artist = "Micheal Jordan",
                            CategoryId = new Guid("9983a002-ed2d-4754-821a-bba7414eaf56"),
                            Date = new DateTime(2023, 8, 8, 8, 50, 47, 514, DateTimeKind.Local).AddTicks(7242),
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            ImageURL = "https://cdn.vox-cdn.com/thumbor/nuohEKEEjxBm3nj4VUUwvmloOhg=/1400x788/filters:format(jpeg)/cdn.vox-cdn.com/uploads/chorus_asset/file/15795164/concert.0.1462605431.jpg",
                            Name = "The Artist: Michel Jordan",
                            Price = 100
                        },
                        new
                        {
                            EventId = new Guid("8c65344a-450a-40b8-9c07-77a0713845ac"),
                            Artist = "Mike Doe",
                            CategoryId = new Guid("9983a002-ed2d-4754-821a-bba7414eaf56"),
                            Date = new DateTime(2023, 8, 8, 8, 50, 47, 514, DateTimeKind.Local).AddTicks(7252),
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            ImageURL = "https://mmo.aiircdn.com/248/611aae2ddb3ff.jpg",
                            Name = "The DJ: Mike",
                            Price = 150
                        },
                        new
                        {
                            EventId = new Guid("9a6d5e78-f41f-4b6a-b293-334af471fe43"),
                            Artist = "James Bond",
                            CategoryId = new Guid("9983a002-ed2d-4754-821a-bba7414eaf56"),
                            Date = new DateTime(2023, 7, 8, 8, 50, 47, 514, DateTimeKind.Local).AddTicks(7262),
                            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry.",
                            ImageURL = "https://static.lpnt.fr/images/2021/05/29/21769500lpw-21769504-article-concert-covid19-indochine-jpg_7994906_660x281.jpg",
                            Name = "Clash of the DJ Clanes",
                            Price = 90
                        });
                });

            modelBuilder.Entity("Phoenix.TicketManagement.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatePlaced")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OrderPaid")
                        .HasColumnType("bit");

                    b.Property<int>("OrderTotal")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderId = new Guid("d66f6719-543a-4632-84d5-dd513c55eab1"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatePlaced = new DateTime(2023, 4, 8, 8, 50, 47, 514, DateTimeKind.Local).AddTicks(7279),
                            OrderPaid = true,
                            OrderTotal = 400,
                            UserId = new Guid("6fa95748-c491-4d78-9c6c-915af51445ae")
                        },
                        new
                        {
                            OrderId = new Guid("ffa495fa-06d9-41aa-b701-6776b26dbe1b"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatePlaced = new DateTime(2023, 4, 8, 8, 50, 47, 514, DateTimeKind.Local).AddTicks(7292),
                            OrderPaid = true,
                            OrderTotal = 180,
                            UserId = new Guid("6eeb8afc-0660-4008-a4de-a74744c49183")
                        },
                        new
                        {
                            OrderId = new Guid("7b88a61e-a89d-4205-aa2c-a99bef759c7c"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatePlaced = new DateTime(2023, 4, 8, 8, 50, 47, 514, DateTimeKind.Local).AddTicks(7302),
                            OrderPaid = true,
                            OrderTotal = 135,
                            UserId = new Guid("9337c530-ea04-43ca-bbe2-23947f80b53f")
                        });
                });

            modelBuilder.Entity("Phoenix.TicketManagement.Domain.Entities.Event", b =>
                {
                    b.HasOne("Phoenix.TicketManagement.Domain.Entities.Category", "Category")
                        .WithMany("Events")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Phoenix.TicketManagement.Domain.Entities.Category", b =>
                {
                    b.Navigation("Events");
                });
#pragma warning restore 612, 618
        }
    }
}
